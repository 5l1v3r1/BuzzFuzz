
test:     file format elf32-i386


Disassembly of section .init:

0804838c <_init>:
 804838c:	53                   	push   ebx
 804838d:	83 ec 08             	sub    esp,0x8
 8048390:	e8 eb 00 00 00       	call   8048480 <__x86.get_pc_thunk.bx>
 8048395:	81 c3 6b 1c 00 00    	add    ebx,0x1c6b
 804839b:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80483a1:	85 c0                	test   eax,eax
 80483a3:	74 05                	je     80483aa <_init+0x1e>
 80483a5:	e8 96 00 00 00       	call   8048440 <close@plt+0x10>
 80483aa:	83 c4 08             	add    esp,0x8
 80483ad:	5b                   	pop    ebx
 80483ae:	c3                   	ret    

Disassembly of section .plt:

080483b0 <read@plt-0x10>:
 80483b0:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 80483b6:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80483bc:	00 00                	add    BYTE PTR [eax],al
	...

080483c0 <read@plt>:
 80483c0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80483c6:	68 00 00 00 00       	push   0x0
 80483cb:	e9 e0 ff ff ff       	jmp    80483b0 <_init+0x24>

080483d0 <__stack_chk_fail@plt>:
 80483d0:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 80483d6:	68 08 00 00 00       	push   0x8
 80483db:	e9 d0 ff ff ff       	jmp    80483b0 <_init+0x24>

080483e0 <puts@plt>:
 80483e0:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 80483e6:	68 10 00 00 00       	push   0x10
 80483eb:	e9 c0 ff ff ff       	jmp    80483b0 <_init+0x24>

080483f0 <open@plt>:
 80483f0:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 80483f6:	68 18 00 00 00       	push   0x18
 80483fb:	e9 b0 ff ff ff       	jmp    80483b0 <_init+0x24>

08048400 <mmap@plt>:
 8048400:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 8048406:	68 20 00 00 00       	push   0x20
 804840b:	e9 a0 ff ff ff       	jmp    80483b0 <_init+0x24>

08048410 <__libc_start_main@plt>:
 8048410:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 8048416:	68 28 00 00 00       	push   0x28
 804841b:	e9 90 ff ff ff       	jmp    80483b0 <_init+0x24>

08048420 <memset@plt>:
 8048420:	ff 25 24 a0 04 08    	jmp    DWORD PTR ds:0x804a024
 8048426:	68 30 00 00 00       	push   0x30
 804842b:	e9 80 ff ff ff       	jmp    80483b0 <_init+0x24>

08048430 <close@plt>:
 8048430:	ff 25 28 a0 04 08    	jmp    DWORD PTR ds:0x804a028
 8048436:	68 38 00 00 00       	push   0x38
 804843b:	e9 70 ff ff ff       	jmp    80483b0 <_init+0x24>

Disassembly of section .plt.got:

08048440 <.plt.got>:
 8048440:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 8048446:	66 90                	xchg   ax,ax

Disassembly of section .text:

08048450 <_start>:
 8048450:	31 ed                	xor    ebp,ebp
 8048452:	5e                   	pop    esi
 8048453:	89 e1                	mov    ecx,esp
 8048455:	83 e4 f0             	and    esp,0xfffffff0
 8048458:	50                   	push   eax
 8048459:	54                   	push   esp
 804845a:	52                   	push   edx
 804845b:	68 80 87 04 08       	push   0x8048780
 8048460:	68 20 87 04 08       	push   0x8048720
 8048465:	51                   	push   ecx
 8048466:	56                   	push   esi
 8048467:	68 4b 85 04 08       	push   0x804854b
 804846c:	e8 9f ff ff ff       	call   8048410 <__libc_start_main@plt>
 8048471:	f4                   	hlt    
 8048472:	66 90                	xchg   ax,ax
 8048474:	66 90                	xchg   ax,ax
 8048476:	66 90                	xchg   ax,ax
 8048478:	66 90                	xchg   ax,ax
 804847a:	66 90                	xchg   ax,ax
 804847c:	66 90                	xchg   ax,ax
 804847e:	66 90                	xchg   ax,ax

08048480 <__x86.get_pc_thunk.bx>:
 8048480:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048483:	c3                   	ret    
 8048484:	66 90                	xchg   ax,ax
 8048486:	66 90                	xchg   ax,ax
 8048488:	66 90                	xchg   ax,ax
 804848a:	66 90                	xchg   ax,ax
 804848c:	66 90                	xchg   ax,ax
 804848e:	66 90                	xchg   ax,ax

08048490 <deregister_tm_clones>:
 8048490:	b8 37 a0 04 08       	mov    eax,0x804a037
 8048495:	2d 34 a0 04 08       	sub    eax,0x804a034
 804849a:	83 f8 06             	cmp    eax,0x6
 804849d:	76 1a                	jbe    80484b9 <deregister_tm_clones+0x29>
 804849f:	b8 00 00 00 00       	mov    eax,0x0
 80484a4:	85 c0                	test   eax,eax
 80484a6:	74 11                	je     80484b9 <deregister_tm_clones+0x29>
 80484a8:	55                   	push   ebp
 80484a9:	89 e5                	mov    ebp,esp
 80484ab:	83 ec 14             	sub    esp,0x14
 80484ae:	68 34 a0 04 08       	push   0x804a034
 80484b3:	ff d0                	call   eax
 80484b5:	83 c4 10             	add    esp,0x10
 80484b8:	c9                   	leave  
 80484b9:	f3 c3                	repz ret 
 80484bb:	90                   	nop
 80484bc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080484c0 <register_tm_clones>:
 80484c0:	b8 34 a0 04 08       	mov    eax,0x804a034
 80484c5:	2d 34 a0 04 08       	sub    eax,0x804a034
 80484ca:	c1 f8 02             	sar    eax,0x2
 80484cd:	89 c2                	mov    edx,eax
 80484cf:	c1 ea 1f             	shr    edx,0x1f
 80484d2:	01 d0                	add    eax,edx
 80484d4:	d1 f8                	sar    eax,1
 80484d6:	74 1b                	je     80484f3 <register_tm_clones+0x33>
 80484d8:	ba 00 00 00 00       	mov    edx,0x0
 80484dd:	85 d2                	test   edx,edx
 80484df:	74 12                	je     80484f3 <register_tm_clones+0x33>
 80484e1:	55                   	push   ebp
 80484e2:	89 e5                	mov    ebp,esp
 80484e4:	83 ec 10             	sub    esp,0x10
 80484e7:	50                   	push   eax
 80484e8:	68 34 a0 04 08       	push   0x804a034
 80484ed:	ff d2                	call   edx
 80484ef:	83 c4 10             	add    esp,0x10
 80484f2:	c9                   	leave  
 80484f3:	f3 c3                	repz ret 
 80484f5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80484f9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048500 <__do_global_dtors_aux>:
 8048500:	80 3d 34 a0 04 08 00 	cmp    BYTE PTR ds:0x804a034,0x0
 8048507:	75 13                	jne    804851c <__do_global_dtors_aux+0x1c>
 8048509:	55                   	push   ebp
 804850a:	89 e5                	mov    ebp,esp
 804850c:	83 ec 08             	sub    esp,0x8
 804850f:	e8 7c ff ff ff       	call   8048490 <deregister_tm_clones>
 8048514:	c6 05 34 a0 04 08 01 	mov    BYTE PTR ds:0x804a034,0x1
 804851b:	c9                   	leave  
 804851c:	f3 c3                	repz ret 
 804851e:	66 90                	xchg   ax,ax

08048520 <frame_dummy>:
 8048520:	b8 10 9f 04 08       	mov    eax,0x8049f10
 8048525:	8b 10                	mov    edx,DWORD PTR [eax]
 8048527:	85 d2                	test   edx,edx
 8048529:	75 05                	jne    8048530 <frame_dummy+0x10>
 804852b:	eb 93                	jmp    80484c0 <register_tm_clones>
 804852d:	8d 76 00             	lea    esi,[esi+0x0]
 8048530:	ba 00 00 00 00       	mov    edx,0x0
 8048535:	85 d2                	test   edx,edx
 8048537:	74 f2                	je     804852b <frame_dummy+0xb>
 8048539:	55                   	push   ebp
 804853a:	89 e5                	mov    ebp,esp
 804853c:	83 ec 14             	sub    esp,0x14
 804853f:	50                   	push   eax
 8048540:	ff d2                	call   edx
 8048542:	83 c4 10             	add    esp,0x10
 8048545:	c9                   	leave  
 8048546:	e9 75 ff ff ff       	jmp    80484c0 <register_tm_clones>

0804854b <main>:
 804854b:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 804854f:	83 e4 f0             	and    esp,0xfffffff0
 8048552:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048555:	55                   	push   ebp
 8048556:	89 e5                	mov    ebp,esp
 8048558:	51                   	push   ecx
 8048559:	81 ec 34 50 00 00    	sub    esp,0x5034
 804855f:	89 c8                	mov    eax,ecx
 8048561:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
 8048564:	89 85 d4 af ff ff    	mov    DWORD PTR [ebp-0x502c],eax
 804856a:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 8048570:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048573:	31 c0                	xor    eax,eax
 8048575:	8b 85 d4 af ff ff    	mov    eax,DWORD PTR [ebp-0x502c]
 804857b:	83 c0 04             	add    eax,0x4
 804857e:	8b 00                	mov    eax,DWORD PTR [eax]
 8048580:	83 ec 08             	sub    esp,0x8
 8048583:	6a 00                	push   0x0
 8048585:	50                   	push   eax
 8048586:	e8 65 fe ff ff       	call   80483f0 <open@plt>
 804858b:	83 c4 10             	add    esp,0x10
 804858e:	89 85 e0 af ff ff    	mov    DWORD PTR [ebp-0x5020],eax
 8048594:	c7 85 e4 af ff ff 00 	mov    DWORD PTR [ebp-0x501c],0x0
 804859b:	00 00 00 
 804859e:	c7 85 e8 af ff ff 00 	mov    DWORD PTR [ebp-0x5018],0x0
 80485a5:	00 00 00 
 80485a8:	c7 85 ec af ff ff 00 	mov    DWORD PTR [ebp-0x5014],0x0
 80485af:	00 00 00 
 80485b2:	83 ec 04             	sub    esp,0x4
 80485b5:	68 00 50 00 00       	push   0x5000
 80485ba:	8d 85 f4 af ff ff    	lea    eax,[ebp-0x500c]
 80485c0:	50                   	push   eax
 80485c1:	ff b5 e0 af ff ff    	push   DWORD PTR [ebp-0x5020]
 80485c7:	e8 f4 fd ff ff       	call   80483c0 <read@plt>
 80485cc:	83 c4 10             	add    esp,0x10
 80485cf:	89 85 f0 af ff ff    	mov    DWORD PTR [ebp-0x5010],eax
 80485d5:	c7 85 d8 af ff ff 00 	mov    DWORD PTR [ebp-0x5028],0x0
 80485dc:	00 00 00 
 80485df:	e9 da 00 00 00       	jmp    80486be <main+0x173>
 80485e4:	8d 95 f4 af ff ff    	lea    edx,[ebp-0x500c]
 80485ea:	8b 85 d8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5028]
 80485f0:	01 d0                	add    eax,edx
 80485f2:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80485f5:	3c ff                	cmp    al,0xff
 80485f7:	0f 85 ba 00 00 00    	jne    80486b7 <main+0x16c>
 80485fd:	8b 85 d8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5028]
 8048603:	83 c0 01             	add    eax,0x1
 8048606:	0f b6 84 05 f4 af ff 	movzx  eax,BYTE PTR [ebp+eax*1-0x500c]
 804860d:	ff 
 804860e:	3c c0                	cmp    al,0xc0
 8048610:	0f 85 a1 00 00 00    	jne    80486b7 <main+0x16c>
 8048616:	8b 85 d8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5028]
 804861c:	83 c0 05             	add    eax,0x5
 804861f:	0f b6 84 05 f4 af ff 	movzx  eax,BYTE PTR [ebp+eax*1-0x500c]
 8048626:	ff 
 8048627:	0f b6 c0             	movzx  eax,al
 804862a:	c1 e0 08             	shl    eax,0x8
 804862d:	89 c2                	mov    edx,eax
 804862f:	8b 85 d8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5028]
 8048635:	83 c0 06             	add    eax,0x6
 8048638:	0f b6 84 05 f4 af ff 	movzx  eax,BYTE PTR [ebp+eax*1-0x500c]
 804863f:	ff 
 8048640:	0f b6 c0             	movzx  eax,al
 8048643:	01 d0                	add    eax,edx
 8048645:	89 85 e8 af ff ff    	mov    DWORD PTR [ebp-0x5018],eax
 804864b:	8b 85 d8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5028]
 8048651:	83 c0 07             	add    eax,0x7
 8048654:	0f b6 84 05 f4 af ff 	movzx  eax,BYTE PTR [ebp+eax*1-0x500c]
 804865b:	ff 
 804865c:	0f b6 c0             	movzx  eax,al
 804865f:	c1 e0 08             	shl    eax,0x8
 8048662:	89 c2                	mov    edx,eax
 8048664:	8b 85 d8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5028]
 804866a:	83 c0 08             	add    eax,0x8
 804866d:	0f b6 84 05 f4 af ff 	movzx  eax,BYTE PTR [ebp+eax*1-0x500c]
 8048674:	ff 
 8048675:	0f b6 c0             	movzx  eax,al
 8048678:	01 d0                	add    eax,edx
 804867a:	89 85 e4 af ff ff    	mov    DWORD PTR [ebp-0x501c],eax
 8048680:	8b 85 e8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5018]
 8048686:	0f af 85 e4 af ff ff 	imul   eax,DWORD PTR [ebp-0x501c]
 804868d:	89 85 ec af ff ff    	mov    DWORD PTR [ebp-0x5014],eax
 8048693:	8b 85 ec af ff ff    	mov    eax,DWORD PTR [ebp-0x5014]
 8048699:	83 ec 08             	sub    esp,0x8
 804869c:	6a 00                	push   0x0
 804869e:	6a ff                	push   0xffffffff
 80486a0:	6a 22                	push   0x22
 80486a2:	6a 03                	push   0x3
 80486a4:	50                   	push   eax
 80486a5:	6a 00                	push   0x0
 80486a7:	e8 54 fd ff ff       	call   8048400 <mmap@plt>
 80486ac:	83 c4 20             	add    esp,0x20
 80486af:	89 85 dc af ff ff    	mov    DWORD PTR [ebp-0x5024],eax
 80486b5:	eb 19                	jmp    80486d0 <main+0x185>
 80486b7:	83 85 d8 af ff ff 01 	add    DWORD PTR [ebp-0x5028],0x1
 80486be:	8b 85 d8 af ff ff    	mov    eax,DWORD PTR [ebp-0x5028]
 80486c4:	3b 85 f0 af ff ff    	cmp    eax,DWORD PTR [ebp-0x5010]
 80486ca:	0f 8c 14 ff ff ff    	jl     80485e4 <main+0x99>
 80486d0:	83 ec 04             	sub    esp,0x4
 80486d3:	6a 0a                	push   0xa
 80486d5:	6a 61                	push   0x61
 80486d7:	ff b5 dc af ff ff    	push   DWORD PTR [ebp-0x5024]
 80486dd:	e8 3e fd ff ff       	call   8048420 <memset@plt>
 80486e2:	83 c4 10             	add    esp,0x10
 80486e5:	83 ec 0c             	sub    esp,0xc
 80486e8:	ff b5 dc af ff ff    	push   DWORD PTR [ebp-0x5024]
 80486ee:	e8 ed fc ff ff       	call   80483e0 <puts@plt>
 80486f3:	83 c4 10             	add    esp,0x10
 80486f6:	83 ec 0c             	sub    esp,0xc
 80486f9:	ff b5 e0 af ff ff    	push   DWORD PTR [ebp-0x5020]
 80486ff:	e8 2c fd ff ff       	call   8048430 <close@plt>
 8048704:	83 c4 10             	add    esp,0x10
 8048707:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
 804870a:	65 33 0d 14 00 00 00 	xor    ecx,DWORD PTR gs:0x14
 8048711:	74 05                	je     8048718 <main+0x1cd>
 8048713:	e8 b8 fc ff ff       	call   80483d0 <__stack_chk_fail@plt>
 8048718:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 804871b:	c9                   	leave  
 804871c:	8d 61 fc             	lea    esp,[ecx-0x4]
 804871f:	c3                   	ret    

08048720 <__libc_csu_init>:
 8048720:	55                   	push   ebp
 8048721:	57                   	push   edi
 8048722:	56                   	push   esi
 8048723:	53                   	push   ebx
 8048724:	e8 57 fd ff ff       	call   8048480 <__x86.get_pc_thunk.bx>
 8048729:	81 c3 d7 18 00 00    	add    ebx,0x18d7
 804872f:	83 ec 0c             	sub    esp,0xc
 8048732:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048736:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804873c:	e8 4b fc ff ff       	call   804838c <_init>
 8048741:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048747:	29 c6                	sub    esi,eax
 8048749:	c1 fe 02             	sar    esi,0x2
 804874c:	85 f6                	test   esi,esi
 804874e:	74 25                	je     8048775 <__libc_csu_init+0x55>
 8048750:	31 ff                	xor    edi,edi
 8048752:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048758:	83 ec 04             	sub    esp,0x4
 804875b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804875f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048763:	55                   	push   ebp
 8048764:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804876b:	83 c7 01             	add    edi,0x1
 804876e:	83 c4 10             	add    esp,0x10
 8048771:	39 f7                	cmp    edi,esi
 8048773:	75 e3                	jne    8048758 <__libc_csu_init+0x38>
 8048775:	83 c4 0c             	add    esp,0xc
 8048778:	5b                   	pop    ebx
 8048779:	5e                   	pop    esi
 804877a:	5f                   	pop    edi
 804877b:	5d                   	pop    ebp
 804877c:	c3                   	ret    
 804877d:	8d 76 00             	lea    esi,[esi+0x0]

08048780 <__libc_csu_fini>:
 8048780:	f3 c3                	repz ret 

Disassembly of section .fini:

08048784 <_fini>:
 8048784:	53                   	push   ebx
 8048785:	83 ec 08             	sub    esp,0x8
 8048788:	e8 f3 fc ff ff       	call   8048480 <__x86.get_pc_thunk.bx>
 804878d:	81 c3 73 18 00 00    	add    ebx,0x1873
 8048793:	83 c4 08             	add    esp,0x8
 8048796:	5b                   	pop    ebx
 8048797:	c3                   	ret    
